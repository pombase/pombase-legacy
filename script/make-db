#!/bin/sh -

# A script to make a Chado db from scratch using GMOD tools.  Must be
# run in the gmod-schema/chado directory.

FAST=''

if [ $1 = '-f' ]
then
  shift
  FAST=fast
fi

if [ ! $# = 4 ]
then
  echo "$0: needs 4 arguments: db_name_suffix host username password" 1>&2
  exit 1
fi

export PERL5LIB=lib

replace() {
  var=$1
  new_val=$2
  file=$3
  perl -pne "s/$var=.*/$var=$new_val/" $file > $file.new
  mv $file.new $file
}

DB_NAME_SUFFIX=$1
HOST=$2
USER=$3
PASSWORD=$4

DB=pombase-chado-base-$DB_NAME_SUFFIX

echo "building database: $DB on $HOST"

replace CHADO_DB_NAME $DB $HOME/.gmod_profile
replace CHADO_DB_HOST $HOST $HOME/.gmod_profile
replace CHADO_DB_USER $USER $HOME/.gmod_profile
replace CHADO_DB_PASS $PASSWORD $HOME/.gmod_profile

replace DBNAME $DB build.conf
replace DBHOSE $HOST build.conf
replace DBUSER $USER build.conf
replace DBPASS $PASSWORD build.conf

SOURCES_DIR=/var/pomcur/sources

#dropdb $DB; createdb $DB || exit 1

rm --verbose -rf tmp


(cd $SOURCES_DIR/pombe-embl/; svn update || exit 1)


echo update SO from SVN
(cd $SOURCES_DIR/song-svn; svn update)
echo update GO from CVS
(cd $SOURCES_DIR/go; cvs up)
echo update GO from SVN
(cd $SOURCES_DIR/go-svn; svn --ignore-externals update)

if [ x$FAST = x'' ]
then
  perl Makefile.PL
  make
  make load_schema
  make prepdb
  make ontologies
fi

(cd $SOURCES_DIR/phenotype_ontology_for_chado/; up)

for obo_file in \
    song-svn/so-xp-simple.obo \
    go-svn/ontology/gene_ontology_edit.obo \
    PSI-MOD.obo \
    pombe-embl/mini-ontologies/iao.obo \
    pombe-embl/mini-ontologies/quiescence.obo \
    phenotype_ontology_for_chado/releases/latest/fypo-simple.obo \
    phenotype_ontology_for_chado/supplemental_files/fypo_extension_relations.obo \
    go-svn/ontology/extensions/go_annotation_extension_relations.obo \
    phenotype_ontology_for_chado/peco.obo \
    pro_small.obo \
    pombe-embl/mini-ontologies/fypo_extension.obo \
    pombe-embl/mini-ontologies/chebi.obo \
    pombe-embl/mini-ontologies/cl.obo \
    pombe-embl/mini-ontologies/pato.obo \
    pombe-embl/mini-ontologies/pombe_mini_PR.obo \
    pombe-embl/mini-ontologies/gene_ex_extension_relations.obo \
    pombe-embl/mini-ontologies/PSI-MOD_extension_relations.obo \
    pombase/pombase_terms-v39.obo \
    pombe-embl/mini-ontologies/SO_feature_relations.obo
do
  echo loading: $obo_file
  PROP_FILTERED_OBO=/tmp/prop_filtered.obo
  grep -v '^property_value: ' $SOURCES_DIR/$obo_file > $PROP_FILTERED_OBO
  go2fmt.pl -p obo_text -w xml $PROP_FILTERED_OBO | go-apply-xslt oboxml_to_chadoxml - > /tmp/prop_filtered.xml && stag-storenode.pl -cache 1 -d "dbi:Pg:dbname=$DB;host=$HOST" --user $USER --password $PASSWORD /tmp/prop_filtered.xml || exit 1
done

CURRENT_BUILD_DIR=$SOURCES_DIR/current_build_files

mkdir - $CURRENT_BUILD_DIR/$DB/ontologies

# Save ontology versions
(
  cd $CURRENT_BUILD_DIR/$DB/ontologies

  (cd $SOURCES/go-svn; svn info) > go-svn-info.txt
  cp $SOURCES/go-svn/ontology/gene_ontology_edit.obo .

  (cd $SOURCES/phenotype_ontology_for_chado; svn info) > fypo-svn-info.txt
  cp $SOURCES/phenotype_ontology_for_chado/releases/latest/fypo-simple.obo .
)

echo populate cvtermpath

date; echo starting molecular_function
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c molecular_function
date; echo starting cellular_component
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c cellular_component
date; echo starting biological_process
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c biological_process
date; echo starting fission_yeast_phenotype
./bin/gmod_make_cvtermpath.pl -H $HOST -D $DB -d 'Pg' -u $USER -p $PASSWORD -c fission_yeast_phenotype
date; echo finished

# prevent duplicate feature uniquenames
psql $DB -c 'CREATE UNIQUE INDEX pombase_feature_uniquename_unique_idx ON feature(uniquename);'

echo make copies

for i in `seq 1 5`
do
  NEW_DB=pombase-build-$DB_NAME_SUFFIX-v$i
  echo $NEW_DB
  createdb -T $DB $NEW_DB
done
